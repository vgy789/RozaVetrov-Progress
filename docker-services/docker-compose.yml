version: '3'

services:
  widget:
    image: nginx:latest
    restart: unless-stopped
    ports:
      - "8099:8080"
    volumes:
      - "./frontend:/usr/share/nginx/html:ro"
      - "./nginx.conf:/etc/nginx/conf.d/default.conf:ro"

  server:
    image: postgrest/postgrest:v7.0.1
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - db
    links:
      - db:db
    environment:
      - PGRST_DB_URI=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      # Имя схемы для предоставления клиентам REST
      - PGRST_DB_SCHEMA=${DB_SCHEMA}
      # Роль базы данных для запросов без аутентификации
      - PGRST_DB_ANON_ROLE=${DB_ANON_ROLE}

  db:
    image: postgres:13.0
    restart: unless-stopped
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DB_ANON_ROLE=${DB_ANON_ROLE}
      - DB_SCHEMA=${DB_SCHEMA}
    volumes:
      - "db-data:/var/lib/postgresql/data"
      - ./database/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

volumes:
  db-data:
